name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get composer cache directory
      id: composercache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache php dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composercache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install php dependencies
      run: composer install --prefer-dist

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.1
      with:
        node-version: 14.x

    - name: Cache nodejs dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install nodejs dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Prepare artifacts
      run: |
        tar -czvf www-build.tar.gz www vendor test 
        ls -l

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: www-build
        path: www-build.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: php:7.4-apache
      ports: 
        - 80:80

    env:
      # TEST_BASE_URL: http://localhost
      TEST_BASE_URL: http://test
      SELENIUM_HOST: http://selenium:4444

    services:
      selenium:
        image: selenium/standalone-chrome
        options: --health-cmd "curl http://selenium:4444" --health-interval=5s
        ports: 
          - 4444:4444

    steps:
 
    - name: Download built files
      uses: actions/download-artifact@v2
      with:
        name: www-build

    - name: Extract artifacts
      run: |
        tar -xzf www-build.tar.gz
        ls -l

    - name: Copy files to web root
      run: |
        cp -R ./www/* /var/www/html

    - name: Restart apache server
      run: service apache2 restart

    - name: Check if site is accessible
      run: curl $TEST_BASE_URL

    - name: Run Test
      run: ./vendor/bin/phpunit test
  
